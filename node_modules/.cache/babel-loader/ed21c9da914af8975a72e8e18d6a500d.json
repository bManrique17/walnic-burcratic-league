{"ast":null,"code":"export function addTeamDB(data) {\n  var DBOpenRequest = window.indexedDB.open(\"WalnicDB\", 1);\n\n  DBOpenRequest.onsuccess = function (event) {\n    var db = DBOpenRequest.result;\n    var transaction = db.transaction([\"Team\"], \"readwrite\");\n    var objectStore = transaction.objectStore(\"Team\");\n    var objectStoreRequest = objectStore.add(data);\n  };\n}\n;\nexport async function fetchTeams() {\n  var DBOpenRequest = window.indexedDB.open(\"WalnicDB\", 1);\n  var teams = [];\n  teams = DBOpenRequest.onsuccess = await async function (event) {\n    var db = DBOpenRequest.result;\n    var tx = db.transaction('Team', 'readonly');\n    var store = tx.objectStore('Team');\n    var array2 = []; // Desgraciadamente, todo sigue siendo asíncrono y lo que podría ser\n    // un sencillo y lineal bucle se convierte en callbacks\n\n    array2 = store.openCursor().onsuccess = await function (event) {\n      var array = [];\n      var cursor = event.target.result; // cursor será truthy mientras haya elementos que procesar\n\n      if (cursor) {\n        // En cursor.value tenemos el elemento actual\n        array.push(cursor.value); // Pasamos a procesar el siguiente resultado\n\n        cursor.continue();\n      }\n\n      return array;\n    };\n    return array2;\n  };\n  return teams;\n}\n;","map":{"version":3,"sources":["/root/Escritorio/examen/walnic/src/db.js"],"names":["addTeamDB","data","DBOpenRequest","window","indexedDB","open","onsuccess","event","db","result","transaction","objectStore","objectStoreRequest","add","fetchTeams","teams","tx","store","array2","openCursor","array","cursor","target","push","value","continue"],"mappings":"AAEA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,MAAIC,aAAa,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB,UAAtB,EAAkC,CAAlC,CAApB;;AACAH,EAAAA,aAAa,CAACI,SAAd,GAA0B,UAASC,KAAT,EAAgB;AACxC,QAAIC,EAAE,GAAGN,aAAa,CAACO,MAAvB;AACA,QAAIC,WAAW,GAAGF,EAAE,CAACE,WAAH,CAAe,CAAC,MAAD,CAAf,EAAyB,WAAzB,CAAlB;AACA,QAAIC,WAAW,GAAGD,WAAW,CAACC,WAAZ,CAAwB,MAAxB,CAAlB;AACA,QAAIC,kBAAkB,GAAGD,WAAW,CAACE,GAAZ,CAAgBZ,IAAhB,CAAzB;AACD,GALD;AAQD;AAAA;AAED,OAAO,eAAea,UAAf,GAA4B;AAEjC,MAAIZ,aAAa,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB,UAAtB,EAAkC,CAAlC,CAApB;AACA,MAAIU,KAAK,GAAG,EAAZ;AACAA,EAAAA,KAAK,GAAGb,aAAa,CAACI,SAAd,GAA0B,MAAM,gBAAeC,KAAf,EAAsB;AAC5D,QAAIC,EAAE,GAAGN,aAAa,CAACO,MAAvB;AACA,QAAIO,EAAE,GAAGR,EAAE,CAACE,WAAH,CAAe,MAAf,EAAuB,UAAvB,CAAT;AACA,QAAIO,KAAK,GAAGD,EAAE,CAACL,WAAH,CAAe,MAAf,CAAZ;AACA,QAAIO,MAAM,GAAG,EAAb,CAJ4D,CAK5D;AACA;;AAEAA,IAAAA,MAAM,GAAGD,KAAK,CAACE,UAAN,GAAmBb,SAAnB,GAA+B,MAAM,UAASC,KAAT,EAAgB;AAC5D,UAAIa,KAAK,GAAG,EAAZ;AACA,UAAIC,MAAM,GAAGd,KAAK,CAACe,MAAN,CAAab,MAA1B,CAF4D,CAG5D;;AACA,UAAIY,MAAJ,EAAY;AACV;AAEAD,QAAAA,KAAK,CAACG,IAAN,CAAWF,MAAM,CAACG,KAAlB,EAHU,CAIV;;AACAH,QAAAA,MAAM,CAACI,QAAP;AACD;;AACD,aAAOL,KAAP;AACD,KAZD;AAaA,WAAOF,MAAP;AACD,GAtBD;AAwBA,SAAOH,KAAP;AACD;AAAA","sourcesContent":["\n\nexport function addTeamDB(data) {\n  var DBOpenRequest = window.indexedDB.open(\"WalnicDB\", 1);\n  DBOpenRequest.onsuccess = function(event) {\n    var db = DBOpenRequest.result;\n    var transaction = db.transaction([\"Team\"], \"readwrite\");\n    var objectStore = transaction.objectStore(\"Team\");\n    var objectStoreRequest = objectStore.add(data);\n  };\n\n\n};\n\nexport async function fetchTeams() {\n\n  var DBOpenRequest = window.indexedDB.open(\"WalnicDB\", 1);\n  var teams = [];\n  teams = DBOpenRequest.onsuccess = await async function(event) {\n    var db = DBOpenRequest.result;\n    var tx = db.transaction('Team', 'readonly');\n    var store = tx.objectStore('Team');\n    var array2 = [];\n    // Desgraciadamente, todo sigue siendo asíncrono y lo que podría ser\n    // un sencillo y lineal bucle se convierte en callbacks\n\n    array2 = store.openCursor().onsuccess = await function(event) {\n      var array = [];\n      var cursor = event.target.result;\n      // cursor será truthy mientras haya elementos que procesar\n      if (cursor) {\n        // En cursor.value tenemos el elemento actual\n\n        array.push(cursor.value);\n        // Pasamos a procesar el siguiente resultado\n        cursor.continue();\n      }\n      return array;\n    };\n    return array2;\n  };\n\n  return teams;\n};\n"]},"metadata":{},"sourceType":"module"}